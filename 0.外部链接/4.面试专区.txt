【面试大全】https://github.com/CoderLeixiaoshuai/java-eight-part

一、多线程
（1）线程池的核心线程数、最大线程数如何设置最合适
1、CPU密集型：
最大线程数：N+1
核心线程数：N
2、IO密集型：
最大线程数：2N+1
核心线程数：2N
【重点】需经过压测获得最佳线程数配置

（2）线程的创建方式
1、【一般线程创建】new Thread(()->{}).start();
2、【futureTask】new Thread(futureTask).start();
3、【线程池】ThreadPoolExecutor

（3）并发编程三大特性
原子性、可见性、有序性
1、可见性：
解释：变量在修改时，保证主存和副本的变量始终是一致的
volatile可以保证变量的可见性
【注意】若变量是一个引用类型，想让引用类型的成员变量可见，则需要用volatile修饰成员变量，而不要用volatile修饰引用
2、有序性：
解释：单线程保证最终一致性
volatile可以保证操作的有序性
【单个】
对象在创建的时候，会经历三步：1、空间申请 2、默认值赋值 3、引用关联对象空间
若在构造方法中创建并启动了一个线程，并且出现指令重排序（先进行步骤3，再进行步骤2）的情况时，线程中会直接输出对象的默认赋值
【多个】
多条指令可能会重排序
【注意】对变量使用volatile后，可以禁止指令重排序
（
  详解：
  【内存屏障】https://baijiahao.baidu.com/s?id=1666283243240041852&wfr=spider&for=pc
  【happen-before】https://blog.csdn.net/ma_chen_qq/article/details/82990603/
  【happen-before扩展】https://blog.csdn.net/qq_35576976/article/details/106423055?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-106423055-blog-82990603.pc_relevant_landingrelevant&spm=1001.2101.3001.4242.1&utm_relevant_index=3
）
3、原子性
解释：多条指令不可分割，为原子操作
原子变量、锁 可以保证操作的原子性
